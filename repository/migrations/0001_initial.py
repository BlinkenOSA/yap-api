# Generated by Django 2.2.7 on 2019-11-22 11:22

from django.db import migrations, models
import django.db.models.deletion
import django_date_extensions.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50, verbose_name='City')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'cities',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('genre', models.CharField(max_length=50, verbose_name='Genre')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
                'db_table': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=100, verbose_name='Language')),
                ('iso_639_1', models.CharField(blank=True, max_length=10, null=True, verbose_name='ISO 639-1')),
                ('iso_639_2', models.CharField(blank=True, max_length=10, null=True, verbose_name='ISO 639-2')),
            ],
            options={
                'verbose_name': 'language',
                'verbose_name_plural': 'languages',
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fonds', models.IntegerField(verbose_name='Fonds')),
                ('subfonds', models.IntegerField(verbose_name='Subfonds')),
                ('series', models.IntegerField(verbose_name='Series')),
                ('container_no', models.IntegerField(verbose_name='Container Number')),
                ('sequence_no', models.IntegerField(verbose_name='Sequence Number')),
                ('title_original', models.CharField(max_length=500, verbose_name='Original Title')),
                ('title_english', models.CharField(blank=True, max_length=500, null=True, verbose_name='English Title')),
                ('creation_date_start', django_date_extensions.fields.ApproximateDateField(verbose_name='Date of Creation (Start)')),
                ('creation_date_end', django_date_extensions.fields.ApproximateDateField(blank=True, null=True, verbose_name='Date of Creation (End)')),
                ('extent', models.CharField(blank=True, max_length=50, null=True, verbose_name='Extent')),
                ('description_level', models.CharField(choices=[('F', 'Folder'), ('I', 'Item')], default='F', max_length=2)),
                ('temporal_coverage_start', models.IntegerField(blank=True, null=True, verbose_name='Temporal Coverage (Start)')),
                ('temporal_coverage_end', models.IntegerField(blank=True, null=True, verbose_name='Temporal Coverage (End)')),
                ('privacy', models.TextField(blank=True, verbose_name='Privacy / Access')),
                ('internal_note', models.TextField(blank=True, verbose_name='Internal Note')),
                ('preview', models.CharField(blank=True, max_length=200, null=True, verbose_name='Preview')),
                ('genres', models.ManyToManyField(blank=True, to='repository.Genre', verbose_name='Genre')),
                ('languages', models.ManyToManyField(blank=True, to='repository.Language', verbose_name='Language')),
                ('spatial_coverage', models.ManyToManyField(blank=True, to='repository.City', verbose_name='Spatial Coverage')),
            ],
            options={
                'verbose_name': 'record',
                'verbose_name_plural': 'records',
                'db_table': 'records',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'type',
                'verbose_name_plural': 'types',
                'db_table': 'types',
            },
        ),
        migrations.CreateModel(
            name='RecordSubjectPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject_person', models.CharField(max_length=300, verbose_name='Subject (Person)')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_subject_people', to='repository.Record')),
            ],
            options={
                'verbose_name': 'subject person',
                'verbose_name_plural': 'subject people',
                'db_table': 'record_subject_people',
            },
        ),
        migrations.CreateModel(
            name='RecordSubject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_subjects', to='repository.Record')),
            ],
            options={
                'verbose_name': 'subject',
                'verbose_name_plural': 'subjects',
                'db_table': 'record_subjects',
            },
        ),
        migrations.CreateModel(
            name='RecordDescription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(verbose_name='Description')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_descriptions', to='repository.Record')),
            ],
            options={
                'verbose_name': 'description',
                'verbose_name_plural': 'descriptions',
                'db_table': 'record_descriptions',
            },
        ),
        migrations.CreateModel(
            name='RecordCreator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creator', models.CharField(max_length=500, verbose_name='Creator')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_creators', to='repository.Record')),
            ],
            options={
                'verbose_name': 'creator',
                'verbose_name_plural': 'creators',
                'db_table': 'record_creators',
            },
        ),
        migrations.CreateModel(
            name='RecordCollector',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('collector', models.CharField(max_length=300, verbose_name='Collector')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='record_collectors', to='repository.Record')),
            ],
            options={
                'verbose_name': 'collector',
                'verbose_name_plural': 'collectors',
                'db_table': 'record_collectors',
            },
        ),
        migrations.AddField(
            model_name='record',
            name='types',
            field=models.ManyToManyField(blank=True, to='repository.Type', verbose_name='Type'),
        ),
    ]
